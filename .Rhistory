p4 = 0.01
p1. = 0.9
p2. = 0.2
p3. = 0.01
p4. = 0.01
a1_star = 0.6 * p1 / (0.6 * p1 + 0.15 * p2)
b1_star = 0.6 * p1. / (0.6 * p1. + 0.15 * p2.)
a2_star = 0.15 * p3 / (0.15 * p3 + 0.1 * p4)
b2_star = 0.15 * p3. / (0.15 * p3. + 0.1 * p4.)
slope1 = ((0.6 * p1 + 0.15 * p2) * q.) / ((0.6 * p1. + 0.15 * p2.) * q)
itcp1 = - (0.6 * (p1 / q - p1. / q.)) / ((0.6 * p1. + 0.15 * p2.) / q.)
slope2 = ((0.15 * p3 + 0.1 * p4) * q.) / ((0.15 * p3. + 0.1 * p4.) * q)
itcp2 = -(0.15 * (p3 / q - p3. / q.)) / ((0.15 * p3. + 0.1 * p4.) / q.)
x_grid = seq(from = 0, to = 1, length.out = 500)
y_grid = slope1 * x_grid + itcp1
dta = cbind(x_grid, y_grid)
dta[which(((y_grid < 0) | (y_grid > 1))),] = NA
df = as.data.frame(dta)
colnames(df) = c("a1", "b1")
if (MAR) {
plot1 = ggplot(df, aes(x = a1, y = b1)) +
geom_line(size = 1.5, color = "blue") +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dashed", color = "orange", size = 1) +
geom_point(aes(x = a1_star, y = b1_star), size = 3, color = "red") +
labs(title = "",
x = "a1",
y = "b1") +
ylim(0, 1) +
xlim(0, 1)
} else {
plot1 = ggplot(df, aes(x = a1, y = b1)) +
geom_line(size = 1.5, color = "blue") +
geom_point(aes(x = a1_star, y = b1_star), size = 3, color = "red") +
labs(title = "",
x = "a1",
y = "b1") +
ylim(0, 1) +
xlim(0, 1)
}
x_grid = seq(from = 0, to = 1, length.out = 500)
y_grid = slope2 * x_grid + itcp2
dta2 = cbind(x_grid, y_grid)
dta2[which(((y_grid < 0) | (y_grid > 1))),] = NA
df2 = as.data.frame(dta2)
colnames(df2) = c("a2", "b2")
if (MAR) {
plot2 = ggplot(df2, aes(x = a2, y = b2)) +
geom_line(aes(color = "WI solutions"), , size = 1.5) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dashed", color = "orange", size = 1) +
geom_point(aes(x = a2_star, y = b2_star, color = "Model proportion"), size = 3) +
labs(title = "",
x = "a2",
y = "b2",
color = "Legend") +
ylim(0, 1) +
xlim(0, 1) +
scale_color_manual(values = c("WI solutions" = "blue", "Model proportion" = "red"))
} else {
plot2 = ggplot(df2, aes(x = a2, y = b2)) +
geom_line(aes(color = "WI solutions"), , size = 1.5) +
geom_point(aes(x = a2_star, y = b2_star, color = "Model proportion"), size = 3) +
labs(title = "",
x = "a2",
y = "b2",
color = "Legend") +
ylim(0, 1) +
xlim(0, 1) +
scale_color_manual(values = c("WI solutions" = "blue", "Model proportion" = "red"))
}
grid.arrange(plot1, plot2, ncol = 2, widths = c(1, 1.3))
library(ggplot2)
library(gridExtra)
q = 3
q. = 4
MAR = FALSE
p1 = 0.9
p2 = 0.1
p3 = 0.01
p4 = 0.01
p1. = 0.9
p2. = 0.2
p3. = 0.01
p4. = 0.01
a1_star = 0.6 * p1 / (0.6 * p1 + 0.15 * p2)
b1_star = 0.6 * p1. / (0.6 * p1. + 0.15 * p2.)
a2_star = 0.15 * p3 / (0.15 * p3 + 0.1 * p4)
b2_star = 0.15 * p3. / (0.15 * p3. + 0.1 * p4.)
slope1 = ((0.6 * p1 + 0.15 * p2) * q.) / ((0.6 * p1. + 0.15 * p2.) * q)
itcp1 = - (0.6 * (p1 / q - p1. / q.)) / ((0.6 * p1. + 0.15 * p2.) / q.)
slope2 = ((0.15 * p3 + 0.1 * p4) * q.) / ((0.15 * p3. + 0.1 * p4.) * q)
itcp2 = -(0.15 * (p3 / q - p3. / q.)) / ((0.15 * p3. + 0.1 * p4.) / q.)
x_grid = seq(from = 0, to = 1, length.out = 500)
y_grid = slope1 * x_grid + itcp1
dta = cbind(x_grid, y_grid)
dta[which(((y_grid < 0) | (y_grid > 1))),] = NA
df = as.data.frame(dta)
colnames(df) = c("a1", "b1")
if (MAR) {
plot1 = ggplot(df, aes(x = a1, y = b1)) +
geom_line(size = 1.5, color = "blue") +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dashed", color = "orange", size = 1) +
geom_point(aes(x = a1_star, y = b1_star), size = 3, color = "red") +
labs(title = "",
x = "a1",
y = "b1") +
ylim(0, 1) +
xlim(0, 1)
} else {
plot1 = ggplot(df, aes(x = a1, y = b1)) +
geom_line(size = 1.5, color = "blue") +
geom_point(aes(x = a1_star, y = b1_star), size = 3, color = "red") +
labs(title = "",
x = "a1",
y = "b1") +
ylim(0, 1) +
xlim(0, 1)
}
x_grid = seq(from = 0, to = 1, length.out = 500)
y_grid = slope2 * x_grid + itcp2
dta2 = cbind(x_grid, y_grid)
dta2[which(((y_grid < 0) | (y_grid > 1))),] = NA
df2 = as.data.frame(dta2)
colnames(df2) = c("a2", "b2")
if (MAR) {
plot2 = ggplot(df2, aes(x = a2, y = b2)) +
geom_line(aes(color = "WI solutions"), , size = 1.5) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dashed", color = "orange", size = 1) +
geom_point(aes(x = a2_star, y = b2_star, color = "Model proportion"), size = 3) +
labs(title = "",
x = "a2",
y = "b2",
color = "Legend") +
ylim(0, 1) +
xlim(0, 1) +
scale_color_manual(values = c("WI solutions" = "blue", "Model proportion" = "red")) +
guides(color = guide_legend(override.aes = list(
linetype = c("solid", "blank"))))
} else {
plot2 = ggplot(df2, aes(x = a2, y = b2)) +
geom_line(aes(color = "WI solutions"), , size = 1.5) +
geom_point(aes(x = a2_star, y = b2_star, color = "Model proportion"), size = 3) +
labs(title = "",
x = "a2",
y = "b2",
color = "Legend") +
ylim(0, 1) +
xlim(0, 1) +
scale_color_manual(values = c("WI solutions" = "blue", "Model proportion" = "red")) +
guides(color = guide_legend(override.aes = list(
linetype = c("solid", "blank"))))
}
grid.arrange(plot1, plot2, ncol = 2, widths = c(1, 1.3))
library(ggplot2)
library(gridExtra)
q = 3
q. = 4
MAR = FALSE
p1 = 0.9
p2 = 0.1
p3 = 0.01
p4 = 0.01
p1. = 0.9
p2. = 0.2
p3. = 0.01
p4. = 0.01
a1_star = 0.6 * p1 / (0.6 * p1 + 0.15 * p2)
b1_star = 0.6 * p1. / (0.6 * p1. + 0.15 * p2.)
a2_star = 0.15 * p3 / (0.15 * p3 + 0.1 * p4)
b2_star = 0.15 * p3. / (0.15 * p3. + 0.1 * p4.)
slope1 = ((0.6 * p1 + 0.15 * p2) * q.) / ((0.6 * p1. + 0.15 * p2.) * q)
itcp1 = - (0.6 * (p1 / q - p1. / q.)) / ((0.6 * p1. + 0.15 * p2.) / q.)
slope2 = ((0.15 * p3 + 0.1 * p4) * q.) / ((0.15 * p3. + 0.1 * p4.) * q)
itcp2 = -(0.15 * (p3 / q - p3. / q.)) / ((0.15 * p3. + 0.1 * p4.) / q.)
x_grid = seq(from = 0, to = 1, length.out = 500)
y_grid = slope1 * x_grid + itcp1
dta = cbind(x_grid, y_grid)
dta[which(((y_grid < 0) | (y_grid > 1))),] = NA
df = as.data.frame(dta)
colnames(df) = c("a1", "b1")
if (MAR) {
plot1 = ggplot(df, aes(x = a1, y = b1)) +
geom_line(size = 1.5, color = "blue") +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dashed", color = "orange", size = 1) +
geom_point(aes(x = a1_star, y = b1_star), size = 3, color = "red") +
labs(title = "",
x = "a1",
y = "b1") +
ylim(0, 1) +
xlim(0, 1)
} else {
plot1 = ggplot(df, aes(x = a1, y = b1)) +
geom_line(size = 1.5, color = "blue") +
geom_point(aes(x = a1_star, y = b1_star), size = 3, color = "red") +
labs(title = "",
x = "a1",
y = "b1") +
ylim(0, 1) +
xlim(0, 1)
}
x_grid = seq(from = 0, to = 1, length.out = 500)
y_grid = slope2 * x_grid + itcp2
dta2 = cbind(x_grid, y_grid)
dta2[which(((y_grid < 0) | (y_grid > 1))),] = NA
df2 = as.data.frame(dta2)
colnames(df2) = c("a2", "b2")
if (MAR) {
plot2 = ggplot(df2, aes(x = a2, y = b2)) +
geom_line(aes(color = "WI solutions"), , size = 1.5) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dashed", color = "orange", size = 1) +
geom_point(aes(x = a2_star, y = b2_star, color = "Model proportion"), size = 3) +
labs(title = "",
x = "a2",
y = "b2",
color = "Legend") +
ylim(0, 1) +
xlim(0, 1) +
scale_color_manual(values = c("WI solutions" = "blue", "Model proportion" = "red")) +
guides(color = guide_legend(override.aes = list(
linetype = c("solid", "blank"),
shape = c(NA, 17))))
} else {
plot2 = ggplot(df2, aes(x = a2, y = b2)) +
geom_line(aes(color = "WI solutions"), , size = 1.5) +
geom_point(aes(x = a2_star, y = b2_star, color = "Model proportion"), size = 3) +
labs(title = "",
x = "a2",
y = "b2",
color = "Legend") +
ylim(0, 1) +
xlim(0, 1) +
scale_color_manual(values = c("WI solutions" = "blue", "Model proportion" = "red")) +
guides(color = guide_legend(override.aes = list(
linetype = c("solid", "blank"),
shape = c(NA, 17))))
}
grid.arrange(plot1, plot2, ncol = 2, widths = c(1, 1.3))
library(ggplot2)
library(gridExtra)
q = 3
q. = 4
MAR = FALSE
p1 = 0.9
p2 = 0.1
p3 = 0.01
p4 = 0.01
p1. = 0.9
p2. = 0.2
p3. = 0.01
p4. = 0.01
a1_star = 0.6 * p1 / (0.6 * p1 + 0.15 * p2)
b1_star = 0.6 * p1. / (0.6 * p1. + 0.15 * p2.)
a2_star = 0.15 * p3 / (0.15 * p3 + 0.1 * p4)
b2_star = 0.15 * p3. / (0.15 * p3. + 0.1 * p4.)
slope1 = ((0.6 * p1 + 0.15 * p2) * q.) / ((0.6 * p1. + 0.15 * p2.) * q)
itcp1 = - (0.6 * (p1 / q - p1. / q.)) / ((0.6 * p1. + 0.15 * p2.) / q.)
slope2 = ((0.15 * p3 + 0.1 * p4) * q.) / ((0.15 * p3. + 0.1 * p4.) * q)
itcp2 = -(0.15 * (p3 / q - p3. / q.)) / ((0.15 * p3. + 0.1 * p4.) / q.)
x_grid = seq(from = 0, to = 1, length.out = 500)
y_grid = slope1 * x_grid + itcp1
dta = cbind(x_grid, y_grid)
dta[which(((y_grid < 0) | (y_grid > 1))),] = NA
df = as.data.frame(dta)
colnames(df) = c("a1", "b1")
if (MAR) {
plot1 = ggplot(df, aes(x = a1, y = b1)) +
geom_line(size = 1.5, color = "blue") +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dashed", color = "orange", size = 1) +
geom_point(aes(x = a1_star, y = b1_star), size = 3, color = "red") +
labs(title = "",
x = "a1",
y = "b1") +
ylim(0, 1) +
xlim(0, 1)
} else {
plot1 = ggplot(df, aes(x = a1, y = b1)) +
geom_line(size = 1.5, color = "blue") +
geom_point(aes(x = a1_star, y = b1_star), size = 3, color = "red") +
labs(title = "",
x = "a1",
y = "b1") +
ylim(0, 1) +
xlim(0, 1)
}
x_grid = seq(from = 0, to = 1, length.out = 500)
y_grid = slope2 * x_grid + itcp2
dta2 = cbind(x_grid, y_grid)
dta2[which(((y_grid < 0) | (y_grid > 1))),] = NA
df2 = as.data.frame(dta2)
colnames(df2) = c("a2", "b2")
if (MAR) {
plot2 = ggplot(df2, aes(x = a2, y = b2)) +
geom_line(aes(color = "WI solutions"), , size = 1.5) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dashed", color = "orange", size = 1) +
geom_point(aes(x = a2_star, y = b2_star, color = "Model proportion"), size = 3) +
labs(title = "",
x = "a2",
y = "b2",
color = "Legend") +
ylim(0, 1) +
xlim(0, 1) +
scale_color_manual(values = c("WI solutions" = "blue", "Model proportion" = "red")) +
guides(color = guide_legend(override.aes = list(
linetype = c("solid", "blank"),
shape = c(NA, 1))))
} else {
plot2 = ggplot(df2, aes(x = a2, y = b2)) +
geom_line(aes(color = "WI solutions"), , size = 1.5) +
geom_point(aes(x = a2_star, y = b2_star, color = "Model proportion"), size = 3) +
labs(title = "",
x = "a2",
y = "b2",
color = "Legend") +
ylim(0, 1) +
xlim(0, 1) +
scale_color_manual(values = c("WI solutions" = "blue", "Model proportion" = "red")) +
guides(color = guide_legend(override.aes = list(
linetype = c("solid", "blank"),
shape = c(NA, 1))))
}
grid.arrange(plot1, plot2, ncol = 2, widths = c(1, 1.3))
library(ggplot2)
library(gridExtra)
q = 3
q. = 4
MAR = FALSE
p1 = 0.9
p2 = 0.1
p3 = 0.01
p4 = 0.01
p1. = 0.9
p2. = 0.2
p3. = 0.01
p4. = 0.01
a1_star = 0.6 * p1 / (0.6 * p1 + 0.15 * p2)
b1_star = 0.6 * p1. / (0.6 * p1. + 0.15 * p2.)
a2_star = 0.15 * p3 / (0.15 * p3 + 0.1 * p4)
b2_star = 0.15 * p3. / (0.15 * p3. + 0.1 * p4.)
slope1 = ((0.6 * p1 + 0.15 * p2) * q.) / ((0.6 * p1. + 0.15 * p2.) * q)
itcp1 = - (0.6 * (p1 / q - p1. / q.)) / ((0.6 * p1. + 0.15 * p2.) / q.)
slope2 = ((0.15 * p3 + 0.1 * p4) * q.) / ((0.15 * p3. + 0.1 * p4.) * q)
itcp2 = -(0.15 * (p3 / q - p3. / q.)) / ((0.15 * p3. + 0.1 * p4.) / q.)
x_grid = seq(from = 0, to = 1, length.out = 500)
y_grid = slope1 * x_grid + itcp1
dta = cbind(x_grid, y_grid)
dta[which(((y_grid < 0) | (y_grid > 1))),] = NA
df = as.data.frame(dta)
colnames(df) = c("a1", "b1")
if (MAR) {
plot1 = ggplot(df, aes(x = a1, y = b1)) +
geom_line(size = 1.5, color = "blue") +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dashed", color = "orange", size = 1) +
geom_point(aes(x = a1_star, y = b1_star), size = 3, color = "red") +
labs(title = "",
x = "a1",
y = "b1") +
ylim(0, 1) +
xlim(0, 1)
} else {
plot1 = ggplot(df, aes(x = a1, y = b1)) +
geom_line(size = 1.5, color = "blue") +
geom_point(aes(x = a1_star, y = b1_star), size = 3, color = "red") +
labs(title = "",
x = "a1",
y = "b1") +
ylim(0, 1) +
xlim(0, 1)
}
x_grid = seq(from = 0, to = 1, length.out = 500)
y_grid = slope2 * x_grid + itcp2
dta2 = cbind(x_grid, y_grid)
dta2[which(((y_grid < 0) | (y_grid > 1))),] = NA
df2 = as.data.frame(dta2)
colnames(df2) = c("a2", "b2")
if (MAR) {
plot2 = ggplot(df2, aes(x = a2, y = b2)) +
geom_line(aes(color = "WI solutions"), , size = 1.5) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dashed", color = "orange", size = 1) +
geom_point(aes(x = a2_star, y = b2_star, color = "Model proportion"), size = 3) +
labs(title = "",
x = "a2",
y = "b2",
color = "Legend") +
ylim(0, 1) +
xlim(0, 1) +
scale_color_manual(values = c("WI solutions" = "blue", "Model proportion" = "red")) +
guides(color = guide_legend(override.aes = list(
linetype = c("solid", "blank"),
shape = c(NA, 16))))
} else {
plot2 = ggplot(df2, aes(x = a2, y = b2)) +
geom_line(aes(color = "WI solutions"), , size = 1.5) +
geom_point(aes(x = a2_star, y = b2_star, color = "Model proportion"), size = 3) +
labs(title = "",
x = "a2",
y = "b2",
color = "Legend") +
ylim(0, 1) +
xlim(0, 1) +
scale_color_manual(values = c("WI solutions" = "blue", "Model proportion" = "red")) +
guides(color = guide_legend(override.aes = list(
linetype = c("solid", "blank"),
shape = c(NA, 16))))
}
grid.arrange(plot1, plot2, ncol = 2, widths = c(1, 1.3))
getwd()
setwd("./Research/Wasserstein_imputation")
model_names = c("NLVAR", "AR", "ARMA", "TAR", "GARCH", "ALR", "ARI", "Cyc")
ds = c(2, 1, 1, 1, 1, 3, 1, 1)
for (i in 1:length(model_names)) {
model_name = model_names[i]
d = ds[i]
n_exper = 1000
source("./bchmk_analysis.R")
rm(list = setdiff(ls(), c("model_names", "ds")))
}
x = dta[,((sim - 1) * d + 1):(sim * d)]
sim
d
x = as.matrix(x)
k = ncol(x)
temp = rowSums(is.na(x))
miss_idx = which(temp > 0)
iv = matrix(0, nrow(x), length(miss_idx))
for (i in 1:length(miss_idx)) {
iv[miss_idx[i], i] = 1
}
xmis = x
xmis[miss_idx,] = 0 # rnorm(length(miss_idx))
ar_order = 6
y_aug = embed(xmis, ar_order + 1)
y = y_aug[,1:k]
ylag = y_aug[,-c(1:k)]
model = glmnet(x = cbind(ylag, iv[(ar_order + 1):nrow(iv),]),
y = y,
alpha = 0,
family = "mgaussian",
lambda = lambda)
y_aug = embed(xmis, ar_order + 1)
y = y_aug[,1:k]
ylag = y_aug[,-c(1:k)]
model = glmnet(x = cbind(ylag, iv[(ar_order + 1):nrow(iv),]),
y = y,
alpha = 0,
family = "mgaussian",
lambda = 0.001)
model$beta[[1]]
model$beta
as.matrix(model$beta)
length(idx)
length(miss_idx)
-c(model$beta[(ar_order + 1):length(model$beta)])
rm(list = setdiff(ls(), c("model_names", "ds")))
model_names = c("AR", "ARMA", "TAR", "GARCH", "ALR", "ARI", "Cyc", "NLVAR")
ds = c(1, 1, 1, 1, 3, 1, 1, 2)
for (i in 1:length(model_names)) {
model_name = model_names[i]
d = ds[i]
n_exper = 1000
source("./bchmk_analysis.R")
rm(list = setdiff(ls(), c("model_names", "ds")))
}
dev.off()
rm(list = setdiff(ls(), c("model_names", "ds")))
# model_names = c("AR", "ARMA", "TAR", "GARCH", "ALR", "ARI", "Cyc", "NLVAR")
model_names = c("ALR", "ARI", "Cyc", "NLVAR")
ds = c(1, 1, 1, 1, 3, 1, 1, 2)
for (i in 1:length(model_names)) {
model_name = model_names[i]
d = ds[i]
n_exper = 1000
source("./bchmk_analysis.R")
rm(list = setdiff(ls(), c("model_names", "ds")))
}
d
12000 / 4
dta = read.csv(paste0("./sim_data/", "ALR", "/", "ALR", "_benchmark.csv"), header = F)
dta = read.csv(paste0("./sim_data/", "ALR", "/", "ALR", "benchmarks_miss1.csv"), header = F)
dta = read.csv(paste0("./sim_data/", "ALR", "/", "benchmarks_miss1.csv"), header = F)
dim(dta)
dta[1:10,1:6]
dta = read.csv(paste0("./sim_data/", "ALR", "/", "benchmarks_miss1.csv"), header = T)
dta[1:10,1:6]
12000/(4*3)
n_exper = 1000
model_name = "ALR"
d = 1
dta_com = read.csv(paste0("./sim_data/", model_name, "/", model_name, "_original.csv"), header = F)
dta = read.csv(paste0("./sim_data/", model_name, "/", model_name, "_miss1.csv"), header = F)
lin_imp = matrix(NA, nrow = nrow(dta), ncol = ncol(dta))
dim(lin_imp)
for (sim in 1:n_exper) {
lin_imp[,((sim - 1) * d + 1):(sim * d)] = as.matrix(na_interpolation(dta[,((sim - 1) * d + 1):(sim * d)], "linear"))
if (sim %% 100 == 0 && sim > 99) {
cat("Iteration", sim, "\n")
}
}
dim(lin_imp)
lin_imp[1:10,2990:3000]
rm(list=ls())
cat("\014")
model_names = c("ALR", "NLVAR", "ARI", "Cyc", "AR", "ARMA", "TAR", "GARCH")
ds = c(3, 2, 1, 1, 1, 1, 1, 1)
n_exper = 1000
show_plot = FALSE
for (i in 1:length(model_names)) {
model_name = model_names[i]
d = ds[i]
cat("Starting: ", model_name, "\n")
source("./bchmk_analysis.R")
rm(list = setdiff(ls(), c("model_names", "ds", "n_exper", "show_plot")))
}
gc()
